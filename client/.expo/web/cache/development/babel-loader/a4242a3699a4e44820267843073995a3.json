{"ast":null,"code":"import { FETCH_TODOS, TODOS_LOADING, TODOS_LOADED, ADD_TODO } from \"./types\";\nimport axios from 'axios';\nimport { returnErrors } from \"./errorActions\";\nvar x = 0,\n    y;\nexport var fetchTodos = function fetchTodos(id) {\n  return function (dispatch, getState) {\n    var token = getState().auth.token;\n    var config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    console.log('Token: ' + token);\n\n    if (token) {\n      config.headers['x-auth-token'] = token;\n\n      if (x === 0) {\n        dispatch({\n          type: TODOS_LOADING\n        });\n      }\n\n      axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos', id, config).then(function (todos) {\n        if (x === 0) {\n          dispatch({\n            type: TODOS_LOADED\n          });\n          dispatch({\n            type: FETCH_TODOS,\n            payload: todos.data\n          });\n          x = 1;\n          y = todos.data.length;\n          console.log(\"hii there\");\n        } else if (y !== todos.data.length) {\n          console.log(\"y: \" + y);\n          console.log(\"data length: \" + todos.data.length);\n          axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos', id, config).then(function (todos) {\n            if (todos.data.length !== 0) {\n              dispatch({\n                type: FETCH_TODOS,\n                payload: todos.data\n              });\n            }\n          });\n          y = todos.data.length;\n        }\n      });\n    }\n  };\n};\nexport var addTodo = function addTodo(todo) {\n  return function (dispatch, getState) {\n    var token = getState().auth.token;\n    var config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n\n    dispatch({\n      type: ADD_TODO\n    });\n    axios.post('https://todo-reactnative-server.herokuapp.com/api/addTodo', todo, config).then(function (todo) {\n      console.log(todo.data);\n    }).catch(function (err) {\n      console.log(err.response.status);\n      dispatch(returnErrors(err.response.data, err.response.status, 'ERROR_TODO'));\n    });\n  };\n};\nexport var deleteTodo = function deleteTodo(id) {\n  return function (dispatch, getState) {\n    var token = getState().auth.token;\n    var config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n\n    dispatch({\n      type: 'DELETE_TODO'\n    });\n    axios.post('https://todo-reactnative-server.herokuapp.com/api/deleteTodo', id, config).then(console.log('deleted')).catch(function (err) {\n      console.log(err.response.status);\n    });\n  };\n};","map":{"version":3,"sources":["E:/reat-native-todo/client/src/actions/todosActions.js"],"names":["FETCH_TODOS","TODOS_LOADING","TODOS_LOADED","ADD_TODO","axios","returnErrors","x","y","fetchTodos","id","dispatch","getState","token","auth","config","headers","console","log","type","post","then","todos","payload","data","length","addTodo","todo","catch","err","response","status","deleteTodo"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,YAArC,EAAmDC,QAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR;AAEA,IAAIC,CAAC,GAAC,CAAN;AAAA,IAAQC,CAAR;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,SAAQ,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAGtD,QAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;AAGA,QAAME,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAUL,KAAtB;;AAEA,QAAGA,KAAH,EAAS;AACLE,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;;AAEJ,UAAGN,CAAC,KAAK,CAAT,EAAW;AACTI,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAACjB;AAAP,SAAD,CAAR;AACD;;AAEDG,MAAAA,KAAK,CAACe,IAAN,CAAW,8DAAX,EAA0EV,EAA1E,EAA6EK,MAA7E,EACGM,IADH,CACQ,UAAAC,KAAK,EAAI;AACb,YAAGf,CAAC,KAAG,CAAP,EAAS;AAELI,UAAAA,QAAQ,CAAC;AAAEQ,YAAAA,IAAI,EAAChB;AAAP,WAAD,CAAR;AACAQ,UAAAA,QAAQ,CAAC;AACLQ,YAAAA,IAAI,EAAClB,WADA;AAELsB,YAAAA,OAAO,EAACD,KAAK,CAACE;AAFT,WAAD,CAAR;AAIAjB,UAAAA,CAAC,GAAC,CAAF;AACAC,UAAAA,CAAC,GAACc,KAAK,CAACE,IAAN,CAAWC,MAAb;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,SAVD,MAUM,IAAGV,CAAC,KAAKc,KAAK,CAACE,IAAN,CAAWC,MAApB,EAA2B;AAC/BR,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAMV,CAAlB;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBI,KAAK,CAACE,IAAN,CAAWC,MAAvC;AAEQpB,UAAAA,KAAK,CAACe,IAAN,CAAW,8DAAX,EAA0EV,EAA1E,EAA6EK,MAA7E,EACGM,IADH,CACQ,UAAAC,KAAK,EAAI;AAEb,gBAAGA,KAAK,CAACE,IAAN,CAAWC,MAAX,KAAqB,CAAxB,EAA0B;AACxBd,cAAAA,QAAQ,CAAC;AACPQ,gBAAAA,IAAI,EAAElB,WADC;AAEPsB,gBAAAA,OAAO,EAAED,KAAK,CAACE;AAFR,eAAD,CAAR;AAID;AACJ,WATD;AAUAhB,UAAAA,CAAC,GAACc,KAAK,CAACE,IAAN,CAAWC,MAAb;AAIT;AACF,OA/BH;AAiCC;AAEJ,GAvDyB;AAAA,CAAnB;AAyDP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAU,UAAChB,QAAD,EAAWC,QAAX,EAAuB;AAEtD,QAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;AAGA,QAAME,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;;AAKA,QAAGH,KAAH,EAAS;AACLE,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACH;;AACDF,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAACf;AAAP,KAAD,CAAR;AAEAC,IAAAA,KAAK,CAACe,IAAN,CAAW,2DAAX,EAAuEO,IAAvE,EAA4EZ,MAA5E,EACCM,IADD,CACM,UAAAM,IAAI,EAAI;AACVV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACH,IAAjB;AACH,KAHD,EAGGI,KAHH,CAGS,UAAAC,GAAG,EAAE;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,QAAJ,CAAaC,MAAzB;AACApB,MAAAA,QAAQ,CAACL,YAAY,CAACuB,GAAG,CAACC,QAAJ,CAAaN,IAAd,EAAoBK,GAAG,CAACC,QAAJ,CAAaC,MAAjC,EAAwC,YAAxC,CAAb,CAAR;AAID,KATC;AAUD,GAzBsB;AAAA,CAAhB;AA4BP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACtB,EAAD;AAAA,SAAQ,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAExD,QAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;AAGA,QAAME,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;;AAKA,QAAGH,KAAH,EAAS;AACLE,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACH;;AAEDF,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAC;AAAP,KAAD,CAAR;AACAd,IAAAA,KAAK,CAACe,IAAN,CAAW,8DAAX,EAA0EV,EAA1E,EAA6EK,MAA7E,EACCM,IADD,CAEMJ,OAAO,CAACC,GAAR,CAAY,SAAZ,CAFN,EAGIU,KAHJ,CAGU,UAAAC,GAAG,EAAE;AACbZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,QAAJ,CAAaC,MAAzB;AAKC,KATH;AAUD,GAzByB;AAAA,CAAnB","sourcesContent":["import { FETCH_TODOS, TODOS_LOADING, TODOS_LOADED, ADD_TODO, } from './types';\r\nimport axios from 'axios';\r\nimport {returnErrors} from './errorActions'\r\n\r\nvar x=0,y;\r\n\r\nexport const fetchTodos = (id) => (dispatch, getState) => {\r\n\r\n    //get token from local storage\r\n    const token = getState().auth.token;\r\n\r\n    //headers\r\n    const config = {\r\n        headers:{\r\n            \"Content-type\":\"application/json\"\r\n        }\r\n    }\r\n    console.log('Token: '+token)\r\n\r\n    if(token){\r\n        config.headers['x-auth-token'] = token;\r\n    \r\n    if(x === 0){\r\n      dispatch({ type:TODOS_LOADING })\r\n    }\r\n\r\n    axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos',id,config)\r\n      .then(todos => {\r\n        if(x===0){\r\n        // console.log(reviews.data)\r\n            dispatch({ type:TODOS_LOADED })\r\n            dispatch({\r\n                type:FETCH_TODOS,\r\n                payload:todos.data\r\n            })\r\n            x=1;\r\n            y=todos.data.length;\r\n            console.log(\"hii there\")\r\n        }else if(y !== todos.data.length){\r\n          console.log(\"y: \"+y)\r\n          console.log(\"data length: \"+todos.data.length)\r\n                  // axios.get('http://localhost:5000/api/fetchReviews')\r\n                  axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos',id,config)\r\n                    .then(todos => {\r\n                      // dispatch({type:POST_LOADED})\r\n                      if(todos.data.length !==0){\r\n                        dispatch({\r\n                          type: FETCH_TODOS,\r\n                          payload: todos.data\r\n                        })\r\n                      }\r\n                  })\r\n                  y=todos.data.length;\r\n                  // y=todos.data.length;\r\n                  // x=0;\r\n                  // console.log('secound')\r\n        }\r\n      })\r\n\r\n    }\r\n      \r\n};\r\n\r\nexport const addTodo = (todo) => (dispatch, getState) =>{\r\n  //get token from local storage\r\n  const token = getState().auth.token;\r\n\r\n  //headers\r\n  const config = {\r\n      headers:{\r\n          \"Content-type\":\"application/json\"\r\n      }\r\n  }\r\n  if(token){\r\n      config.headers['x-auth-token'] = token;\r\n  }\r\n  dispatch({ type:ADD_TODO })\r\n  // console.log(\"inside post\")\r\n  axios.post('https://todo-reactnative-server.herokuapp.com/api/addTodo',todo,config)\r\n  .then(todo => {\r\n      console.log(todo.data)\r\n  }).catch(err=>{\r\n  console.log(err.response.status)\r\n  dispatch(returnErrors(err.response.data, err.response.status,'ERROR_TODO'));\r\n//   dispatch({\r\n//     type:REGESTER_FAIL\r\n// })\r\n})\r\n}\r\n\r\n// delete Todo\r\nexport const deleteTodo = (id) => (dispatch, getState) => {\r\n  //get token from local storage\r\n  const token = getState().auth.token;\r\n\r\n  //headers\r\n  const config = {\r\n      headers:{\r\n          \"Content-type\":\"application/json\"\r\n      }\r\n  }\r\n  if(token){\r\n      config.headers['x-auth-token'] = token;\r\n  }\r\n\r\n  dispatch({ type:'DELETE_TODO' })\r\n  axios.post('https://todo-reactnative-server.herokuapp.com/api/deleteTodo',id,config)\r\n  .then(\r\n        console.log('deleted')\r\n    ).catch(err=>{\r\n    console.log(err.response.status)\r\n    // dispatch(returnErrors(err.response.data, err.response.status,'ERROR_TODO'));\r\n    //   dispatch({\r\n    //     type:REGESTER_FAIL\r\n    // })\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}