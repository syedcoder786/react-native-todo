{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.onTextChange = function (name) {\n      return function (value) {\n        _this.setState(_defineProperty({}, name, value));\n      };\n    };\n\n    _this.onPress = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      var newreview = {\n        email: email,\n        password: password\n      };\n\n      if (!email || !password) {\n        _this.setState({\n          msg: 'Please enter all fields.'\n        });\n      } else if (password.trim() === '') {\n        _this.setState({\n          msg: 'Please enter all fields.'\n        });\n      } else if (reg.test(email) === false) {\n        _this.setState({\n          msg: 'Invaild email.'\n        });\n      } else {\n        _this.setState({\n          msg: ''\n        });\n      }\n\n      console.log(newreview);\n    };\n\n    _this.pressHendeler = function () {\n      _this.props.navigation.navigate('SignUp');\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.err,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, this.state.msg), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: this.onTextChange(\"email\"),\n        value: this.state.review,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        onChangeText: this.onTextChange(\"password\"),\n        value: this.state.review,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        onPress: this.onPress,\n        title: \"Login\",\n        color: \"coral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }))), React.createElement(Button, {\n        onPress: this.pressHendeler,\n        title: \"SignUp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar styles = StyleSheet.create({\n  main: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  form: {\n    width: \"90%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#FFECF9\"\n  },\n  input: {\n    width: '70%',\n    height: 38,\n    padding: 5,\n    borderBottomWidth: 1.5,\n    borderBottomColor: \"#ddd\",\n    marginBottom: 5\n  },\n  btn: {\n    width: \"70%\",\n    height: 35,\n    marginBottom: 15,\n    marginTop: 5\n  },\n  err: {\n    marginTop: 8,\n    fontSize: 15,\n    color: 'red',\n    fontWeight: 'bold'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["E:/client/src/components/auth/Login.js"],"names":["React","Component","Login","state","email","password","onTextChange","name","value","setState","onPress","reg","newreview","msg","trim","test","console","log","pressHendeler","props","navigation","navigate","styles","main","form","err","input","review","btn","StyleSheet","create","alignItems","justifyContent","width","backgroundColor","height","padding","borderBottomWidth","borderBottomColor","marginBottom","marginTop","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, TextInput, Button, Text } from 'react-native';\r\n\r\nclass Login extends Component {\r\n  \r\n  state = {\r\n    email:\"\",\r\n    password:\"\",\r\n  }\r\n\r\n  // componentDidUpdate(prevProps){\r\n  //   const {error} = this.props;\r\n  //   if(error !== prevProps.error){\r\n  //     if(error.id ==='ERROR_REVIEW'){\r\n  //       this.setState({msg:this.props.error.msg.msg})\r\n  //     }else{\r\n  //       this.setState({msg:null})\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  onTextChange = (name) => (value) => {\r\n    this.setState({ [name]: value });\r\n    // console.log(this.state.name)\r\n  };\r\n  onPress = () => {\r\n    const { email, password } = this.state;\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    const newreview = {\r\n      email,\r\n      password\r\n    };\r\n    if( !email || !password ){\r\n      this.setState({ msg:'Please enter all fields.' })\r\n    }else if(password.trim()===''){\r\n      this.setState({ msg:'Please enter all fields.' })\r\n    }else if(reg.test(email) === false){\r\n      this.setState({ msg:'Invaild email.' })\r\n    }else{\r\n      this.setState({ msg:'' })\r\n    }\r\n\r\n    console.log(newreview)\r\n    // this.setState({\r\n    //   name:\"\",\r\n    //   review:\"\"\r\n    // })\r\n    // this.props.addReview(newreview) \r\n    // this.props.clearErrors()\r\n    // this.props.fetchReviews()\r\n  }\r\n\r\n  pressHendeler =()=>{\r\n    this.props.navigation.navigate('SignUp')\r\n   }\r\n\r\n  render(){\r\n    return (\r\n      <View style={styles.main}>\r\n          <View style={styles.form}>\r\n              <Text style={styles.err}>{this.state.msg}</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Email'\r\n                    onChangeText={this.onTextChange(\"email\")}\r\n                    value={this.state.review}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Password'\r\n                    onChangeText={this.onTextChange(\"password\")}\r\n                    value={this.state.review}\r\n                    secureTextEntry={true}\r\n                />\r\n                <View style={styles.btn}>\r\n                <Button\r\n                    onPress={this.onPress}\r\n                    title='Login'\r\n                    color='coral'\r\n                />\r\n                </View>\r\n          </View>\r\n          <Button onPress={this.pressHendeler} title=\"SignUp\"></Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  main: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  form: {\r\n    width: \"90%\",\r\n    // height: 150,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#FFECF9\",\r\n    // marginBottom: 2\r\n  },\r\n  input: {\r\n    width: '70%',\r\n    height: 38,\r\n    padding: 5,\r\n    borderBottomWidth: 1.5,\r\n    borderBottomColor: \"#ddd\",\r\n    marginBottom: 5\r\n  },\r\n  btn: {\r\n    width: \"70%\",\r\n    height: 35,\r\n    marginBottom: 15,\r\n    marginTop: 5,\r\n    // padding: 2,\r\n  },\r\n  err: {\r\n    // padding: 5,\r\n    marginTop: 8,\r\n    fontSize: 15,\r\n    color: 'red',\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}