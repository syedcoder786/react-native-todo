{"ast":null,"code":"import { FETCH_TODOS, TODOS_LOADING, TODOS_LOADED, ADD_TODO } from \"./types\";\nimport axios from 'axios';\nimport { returnErrors } from \"./errorActions\";\nvar x = 0,\n    y = 0;\nexport var fetchTodos = function fetchTodos(id) {\n  return function (dispatch) {\n    if (x === 0) {\n      dispatch({\n        type: TODOS_LOADING\n      });\n    }\n\n    axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos', id).then(function (todos) {\n      if (x === 0) {\n        dispatch({\n          type: TODOS_LOADED\n        });\n        dispatch({\n          type: FETCH_TODOS,\n          payload: todos.data\n        });\n        console.log(\"first: \" + x);\n        x = 1;\n        y = todos.data.length;\n      } else if (y !== todos.data.length) {\n        console.log(\"elif ke andar: \" + y + \" x: \" + x);\n        axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos', id).then(function (todos) {\n          dispatch({\n            type: FETCH_TODOS,\n            payload: todos.data\n          });\n        });\n        y = todos.data.length;\n      }\n    });\n  };\n};\nexport var addTodo = function addTodo(todo) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_TODO\n    });\n    axios({\n      method: 'post',\n      url: 'https://todo-reactnative-server.herokuapp.com/api/addTodo',\n      data: todo\n    }).then(function (todo) {\n      console.log(todo.data);\n    }).catch(function (err) {\n      console.log(err.response.status);\n      dispatch(returnErrors(err.response.data, err.response.status, 'ERROR_TODO'));\n    });\n  };\n};\nexport var deleteTodo = function deleteTodo(id) {\n  return function (dispatch) {\n    dispatch({\n      type: 'DELETE_TODO'\n    });\n    axios({\n      method: 'post',\n      url: 'https://todo-reactnative-server.herokuapp.com/api/deleteTodo',\n      data: id\n    }).then(console.log('deleted')).catch(function (err) {\n      console.log(err.response.status);\n    });\n  };\n};","map":{"version":3,"sources":["E:/reat-native-todo/client/src/actions/todosActions.js"],"names":["FETCH_TODOS","TODOS_LOADING","TODOS_LOADED","ADD_TODO","axios","returnErrors","x","y","fetchTodos","id","dispatch","type","post","then","todos","payload","data","console","log","length","addTodo","todo","method","url","catch","err","response","status","deleteTodo"],"mappings":"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","sourcesContent":["import { FETCH_TODOS, TODOS_LOADING, TODOS_LOADED, ADD_TODO, } from './types';\r\nimport axios from 'axios';\r\nimport {returnErrors} from './errorActions'\r\n\r\nvar x=0,y=0;\r\n\r\nexport const fetchTodos = (id) => dispatch => {\r\n    if(x===0){\r\n      dispatch({ type:TODOS_LOADING })\r\n    }\r\n    // console.log(\"actions ke andar\")\r\n    // axios.get('http://localhost:5000/api/fetchReviews')\r\n    axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos',id)\r\n      .then(todos => {\r\n        if(x===0){\r\n        // console.log(reviews.data)\r\n            dispatch({ type:TODOS_LOADED })\r\n            dispatch({\r\n                type:FETCH_TODOS,\r\n                payload:todos.data\r\n            })\r\n            console.log(\"first: \"+x)\r\n            x=1;\r\n            y=todos.data.length;\r\n        }else if(y !== todos.data.length){\r\n          console.log(\"elif ke andar: \"+y+\" x: \"+x)\r\n                  // axios.get('http://localhost:5000/api/fetchReviews')\r\n                  axios.post('https://todo-reactnative-server.herokuapp.com/api/fetchTodos',id)\r\n                    .then(todos => {\r\n                      // dispatch({type:POST_LOADED})\r\n                      dispatch({\r\n                        type: FETCH_TODOS,\r\n                        payload: todos.data\r\n                      })\r\n                  })\r\n                  y=todos.data.length;\r\n                  // console.log('secound')\r\n        }\r\n      })\r\n      \r\n};\r\n\r\nexport const addTodo = (todo) => dispatch =>{\r\n  dispatch({ type:ADD_TODO })\r\n  // console.log(\"inside post\")\r\n  axios({\r\n      method:'post',\r\n      // url:'http://localhost:5000/api/addReview',\r\n      url:'https://todo-reactnative-server.herokuapp.com/api/addTodo',\r\n      data: todo\r\n  }).then(todo => {\r\n      console.log(todo.data)\r\n  }).catch(err=>{\r\n  console.log(err.response.status)\r\n  dispatch(returnErrors(err.response.data, err.response.status,'ERROR_TODO'));\r\n//   dispatch({\r\n//     type:REGESTER_FAIL\r\n// })\r\n})\r\n}\r\n\r\n// delete Todo\r\nexport const deleteTodo = (id) => dispatch => {\r\n  dispatch({ type:'DELETE_TODO' })\r\n  axios({\r\n    method:'post',\r\n    // url:'http://localhost:5000/api/addReview',\r\n    url:'https://todo-reactnative-server.herokuapp.com/api/deleteTodo',\r\n    data: id\r\n    }).then(\r\n        console.log('deleted')\r\n    ).catch(err=>{\r\n    console.log(err.response.status)\r\n    // dispatch(returnErrors(err.response.data, err.response.status,'ERROR_TODO'));\r\n    //   dispatch({\r\n    //     type:REGESTER_FAIL\r\n    // })\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}