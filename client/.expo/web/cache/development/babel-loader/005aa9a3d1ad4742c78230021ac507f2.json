{"ast":null,"code":"import { USER_LOADED, USER_LOADING, AUTH_ERROR, REGESTER_SUCCESS, REGESTER_FAIL, LOGOUT_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL } from \"./types\";\nimport { returnErrors } from \"./errorActions\";\nimport axios from 'axios';\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: USER_LOADING\n    });\n    getState().auth.token.then(function (token) {\n      if (token) {\n        console.log('Token hai yeh: ' + JSON.stringify(token));\n      }\n\n      var config = {\n        headers: {\n          \"Contect-type\": \"application/json\"\n        }\n      };\n\n      if (token) {\n        config.headers['x-auth-token'] = token;\n      }\n\n      axios.get('http://localhost:5000/api/login/user', config).then(function (res) {\n        return dispatch({\n          type: USER_LOADED,\n          payload: res.data\n        });\n      }).catch(function (err) {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch({\n          type: AUTH_ERROR\n        });\n      });\n    });\n  };\n};\nexport var signup = function signup(user) {\n  return function (dispatch) {\n    console.log('signup');\n    axios({\n      method: 'post',\n      url: 'http://localhost:5000/api/signup',\n      data: user\n    }).then(function (user) {\n      return dispatch({\n        type: REGESTER_SUCCESS,\n        payload: user.data\n      });\n    }).catch(function (err) {\n      console.log(err.response.status);\n      dispatch(returnErrors(err.response.data, err.response.status, 'REGESTER_FAIL'));\n      dispatch({\n        type: REGESTER_FAIL\n      });\n    });\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\nexport var login = function login(user) {\n  return function (dispatch) {\n    axios({\n      method: 'post',\n      url: 'http://localhost:5000/api/login',\n      data: user\n    }).then(function (user) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: user.data\n      });\n    }).catch(function (err) {\n      console.log(err.response.status);\n      dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:/reat-native-todo/client/src/actions/authActions.js"],"names":["USER_LOADED","USER_LOADING","AUTH_ERROR","REGESTER_SUCCESS","REGESTER_FAIL","LOGOUT_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","returnErrors","axios","loadUser","dispatch","getState","type","auth","token","then","console","log","JSON","stringify","config","headers","get","res","payload","data","catch","err","response","status","signup","user","method","url","logout","login"],"mappings":"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","sourcesContent":["import { \r\n    USER_LOADED, \r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    REGESTER_SUCCESS,\r\n    REGESTER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL\r\n} from './types';\r\nimport {returnErrors} from './errorActions'\r\nimport axios from 'axios';\r\n// import { AsyncStorage } from 'react-native';\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    //user loading\r\n    dispatch({type:USER_LOADING})\r\n\r\n    //get token from local storage\r\n    // const token = getState().auth.token;\r\n    getState().auth.token.then( token => {\r\n        // console.log('Token hai yeh: '+token)\r\n        if(token){\r\n            console.log('Token hai yeh: '+JSON.stringify(token))\r\n        }\r\n        //headers\r\n        const config = {\r\n            headers:{\r\n                \"Contect-type\":\"application/json\"\r\n            }\r\n        }\r\n        if(token){\r\n            config.headers['x-auth-token'] = token;\r\n        }\r\n\r\n        axios.get('http://localhost:5000/api/login/user', config)\r\n            .then( res => dispatch({\r\n                type:USER_LOADED,\r\n                payload:res.data\r\n            }))\r\n            .catch( err => {\r\n                dispatch(returnErrors(err.response.data, err.response.status))\r\n                dispatch({\r\n                type:AUTH_ERROR\r\n                })\r\n            })\r\n    })\r\n    // var token;\r\n    // getdata = async () => {\r\n    //     try {\r\n    //       await getState().auth.token\r\n    //       token = getState().auth.token;\r\n    //       console.log(\"token: \"+JSON.stringify(token))\r\n    //     } catch (e) {\r\n    //       // saving error\r\n    //       console.log(\"err\")\r\n    //     }\r\n    //   }\r\n\r\n    // console.log(JSON.stringify(token))\r\n\r\n    // if(token){\r\n    //     console.log('Token hai yeh: '+JSON.stringify(token))\r\n    // }\r\n    // //headers\r\n    // const config = {\r\n    //     headers:{\r\n    //         \"Contect-type\":\"application/json\"\r\n    //     }\r\n    // }\r\n    // if(token){\r\n    //     config.headers['x-auth-token'] = token;\r\n    // }\r\n\r\n    // axios.get('/api/login/user', config)\r\n    //     .then( res => dispatch({\r\n    //         type:USER_LOADED,\r\n    //         payload:res.data\r\n    //     }))\r\n    //     .catch( err => {\r\n    //         dispatch(returnErrors(err.response.data, err.response.status))\r\n    //         dispatch({\r\n    //         type:AUTH_ERROR\r\n    //         })\r\n    //     })\r\n}\r\n\r\n// Sign up\r\nexport const signup = (user) => (dispatch) => {\r\n    console.log('signup')\r\n    axios({\r\n        method: 'post',\r\n        url: 'http://localhost:5000/api/signup',\r\n        data: user\r\n      }).then(user => dispatch({\r\n        type:REGESTER_SUCCESS,\r\n        payload:user.data\r\n        // console.log(user)\r\n      })).catch(err => {\r\n        console.log(err.response.status)\r\n        dispatch(returnErrors(err.response.data, err.response.status,'REGESTER_FAIL'));\r\n        dispatch({\r\n          type:REGESTER_FAIL\r\n      })})\r\n}\r\n\r\n//Log out\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type:LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n//Login\r\nexport const login = (user) => (dispatch) => {\r\n    axios({\r\n        method:'post',\r\n        url:'http://localhost:5000/api/login',\r\n        data: user\r\n    }).then(user => {\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload:user.data\r\n        })\r\n    }).catch(err => {\r\n        console.log(err.response.status)\r\n        dispatch(returnErrors(err.response.data, err.response.status,'LOGIN_FAIL'));\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}